# IoTCombo
services:
# Infras
  emqx:
    restart: always
    image: emqx:5.4.1
    pull_policy: missing
    ports:
    - 1883:1883
    - 18083:18083
    volumes:
    - /gw/data/emqx:/opt/emqx/data
    - /gw/etc/emqx:/opt/emqx/etc
    - /gw/log/emqx:/opt/emqx/log
  redis:
    restart: always
    image: redis:alpine
    pull_policy: missing
    ports:
    - 6379:6379
    volumes:
     - /gw/data/redis:/data
    deploy:
      resources:
        reservations:
          memory: 1G
  influxdb:
    restart: always
    image: influxdb:2.7-alpine
    pull_policy: missing
    environment:
    - DOCKER_INFLUXDB_INIT_MODE=${INFLUXDB_MODE}
    - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USERNAME}
    - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD}
    - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
    - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
    - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_ADMIN_TOKEN}
    - INFLUXDB_URL=${INFLUXDB_URL}
    volumes:
      - /gw/data/influxdb:/var/lib/influxdb2:rw
  telegraf:
    restart: always
    image: telegraf:1.30-alpine
    pull_policy: missing
    depends_on:
      - influxdb
    environment:
    - DOCKER_INFLUXDB_INIT_MODE=${INFLUXDB_MODE}
    - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USERNAME}
    - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD}
    - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
    - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
    - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_ADMIN_TOKEN}
    - INFLUXDB_URL=${INFLUXDB_URL}
    volumes:
      - /gw/configs/influxdb/telegraf/mytelegraf.conf:/etc/telegraf/telegraf.conf:ro
  nginx:
    restart: always
    image: openresty/openresty:1.21.4.1-0-alpine
    ports:
    - 80:80
    depends_on:
    - gateway-svc
    - files-svc
    - web-svc
    - com2scada-svc
    environment:
    - TV_HOST_URL=${TV_HOST_URL}
    volumes:
    - /gw/configs/frontend/Image:/var/www/html/image
    - /gw/configs/nginx/sites-enabled:/etc/nginx/conf.d
    - /gw/configs/nginx/nginx.conf:/etc/nginx/nginx.conf
# Server Components
  files-svc:
    restart: always
    image: asia-east1-docker.pkg.dev/muulin-universal/ml-iotsrv/files:v2.0.0
    volumes:
    - /gw/data/reports/report:/reports
  gateway-svc:
    restart: always
    image: asia-east1-docker.pkg.dev/muulin-universal/ml-iotsrv/gateway:dev
    pull_policy: missing
    depends_on:
    - layout-svc
    - auth-svc
    - schedule-svc
    - queue-svc
    - com2scada-svc
    - event-svc
    - rubase-alert-svc
  auth-svc:
    restart: always
    image: asia-east1-docker.pkg.dev/muulin-universal/ml-iotsrv/auth:v2.0.0
    environment:
    - S6_KEEP_ENV=1
    - SERVICE=auth
    - USAGE=scada
    - Auth_Code=42697846
    - CONFIG_FILE=/etc/config.yml
    - LOG_LEVEL=${LOG_LEVEL}
    - LOG_TARGET=${LOG_TARGET}
    - GRPC_PORT=${GRPC_PORT}
    - GRPC_REFLECT=${GRPC_REFLECT}
    - GRPC_EVENT_ADDRESS=${GRPC_EVENT_ADDRESS}
    - API_PORT=${API_PORT}
    - API_DEBUG=${IS_DEBUG}
    - MOCK_AUTH=${MOCK_AUTH}
    - GIN_MODE=${GIN_MODE}
    - TRUSTED_PROXIES=${TRUSTED_PROXIES}
    volumes:
    - /gw/data/sql/:/sql/
    - /gw/configs/conf/config.yml:/etc/config.yml
    - /gw/configs/conf/cert:/cert
  schedule-svc:
    restart: always
    image: asia-east1-docker.pkg.dev/muulin-universal/ml-iotsrv/schedule:v2.0.0
    depends_on:
    - auth-svc
    environment:
    - S6_KEEP_ENV=1
    - SERVICE=schedule
    - CONFIG_FILE=/etc/config.yml
    - CACHE_DB=schedule
    - LOG_LEVEL=${LOG_LEVEL}
    - LOG_TARGET=${LOG_TARGET}
    - SCM_CONF_PATH=/etc/scm/
    - REFRESH_HOUR=17
    - REFRESH_MIN=32
    - GIN_MODE=${GIN_MODE}
    - API_PORT=${API_PORT}
    - MOCK_AUTH=${MOCK_AUTH}
    - API_DEBUG=${IS_DEBUG}
    - TRUSTED_PROXIES=${TRUSTED_PROXIES}
    - DISPLAY_PROC_ACTS=true
    - GRPC_PORT=${GRPC_PORT}
    - GRPC_REFLECT=${GRPC_REFLECT}
    - GRPC_Auth_Address=${GRPC_AUTH_ADDRESS}
    - GRPC_COMMUNICATE_ADDRESS=${GRPC_COMMUNICATE_ADDRESS}
    links:
    - "communicate:communicate-svc"
    volumes:
    - /gw/configs/conf/scm/:/etc/scm/
    - /gw/configs/conf/config.yml:/etc/config.yml
  layout-svc:
    restart: always
    image: asia-east1-docker.pkg.dev/muulin-universal/ml-iotgw/layout:v2.0.0
    environment:
    - SERVICE=scada_layout
    - CONFIG_FILE=/etc/config.yml
    - DOWNLOAD_CONF_DIR=/frontend/
    - GRPC_AUTH_ADDRESS=${GRPC_AUTH_ADDRESS}
    - GRPC_COMMUNICATE_ADDRESS=${GRPC_COMMUNICATE_ADDRESS}
    - GRPC_PORT=${GRPC_PORT}
    - GRPC_REFLECT=${GRPC_REFLECT}
    - LOG_LEVEL=${LOG_LEVEL}
    - LOG_TARGET=${LOG_TARGET}
    - TV_MODE_ONLY=false
    - COMM_TIME_OUT_DURATION=2.5s
    - STATIC_IMAGE_PATH=/image
    - GIN_MODE=${GIN_MODE}
    - MOCK_AUTH=${MOCK_AUTH}
    - API_DEBUG=${IS_DEBUG}
    - API_PORT=${API_PORT}
    - TRUSTED_PROXIES=*
    volumes:
    - /gw/configs/frontend:/frontend
    - /gw/configs/conf/config.yml:/etc/config.yml
  com2scada-svc:
    restart: always
    image: asia-east1-docker.pkg.dev/muulin-universal/ml-iotsrv/com2scada:v2.0.0
    depends_on:
    - auth-svc
    - layout-svc
    environment:
    - SERVICE=com2scada
    - CHECK_CYCLE=3m
    - CONFIG_FILE=/etc/config.yml
    - LOG_LEVEL=${LOG_LEVEL}
    - LOG_TARGET=${LOG_TARGET}
    - GRPC_PORT=${GRPC_PORT}
    - GRPC_REFLECT=${GRPC_REFLECT}
    - TOPIC_ROUTINE=${TOPIC_ROUTINE_DATA}
    - TOPIC_CHANGE_DATA=${TOPIC_CHANGE_DATA}
    - TOPIC_CONNECT_ERR=${TOPIC_CONNECT_ERR}
    - TOPIC_WRITE_DATA=${TOPIC_WRITE_DATA}
    - MQTT_BrokerURL=${MQTT_BrokerURL}
    - MQTT_ClientID=com2scada
    - MQTT_Qos=1
    - MQTT_KeepAlive=30
    - MQTT_ConnectRetryDelay=500
    - MQTT_Debug=${IS_DEBUG}
    - MQTT_IsAuth=true
    - MQTT_User=${MQTT_User}
    - MQTT_Password=${MQTT_Password}
    - MQTT_QueuePath=/etc/queue/local
    - MQTT_Gzip=${MQTT_Gzip}
    - GIN_MODE=${GIN_MODE}
    - API_PORT=${API_PORT}
    - MOCK_AUTH=${MOCK_AUTH}
    - API_DEBUG=${IS_DEBUG}
    - TRUSTED_PROXIES=${TRUSTED_PROXIES}
    - GRPC_Auth_Address=${GRPC_AUTH_ADDRESS}
    - GRPC_LAYOUT_ADDRESS=${GRPC_LAYOUT_ADDRESS}
    - GRPC_COMMUNICATE_ADDRESS=${GRPC_COMMUNICATE_ADDRESS}
    - GRPC_EVENT_ADDRESS=${GRPC_EVENT_ADDRESS}
    links:
    - "communicate:communicate-svc"
    - "emqx:mqtt-svc"
    volumes:
    - /gw/configs/conf/config.yml:/etc/config.yml
  mbproxy-svc:
    image: asia-east1-docker.pkg.dev/muulin-universal/ml-iotgw/mbproxy:v2.0.0
    depends_on:
    - com2scada-svc
    - event-svc
    environment:
    - LOG_LEVEL=${LOG_LEVEL}
    - LOG_TARGET=${LOG_TARGET}
    - SERVICE=mbproxy
    - CONFIG_FILE=/etc/config.yml
    - PROXY_CONF=/etc/proxies.yml
    - GRPC_COM2SCADA_ADDRESS=${GRPC_COM2SCADA_ADDRESS}
    - GRPC_EVENT_ADDRESS=${GRPC_EVENT_ADDRESS}
    - GRPC_COMMUNICATE_ADDRESS=${GRPC_COMMUNICATE_ADDRESS}
    volumes:
    - ./configs/conf/config.yml:/etc/config.yml
    - ./configs/backend/Proxy/proxies.yml:/etc/proxies.yml
    ports:
    - 502:502
  queue-svc:
    restart: always
    image: asia-east1-docker.pkg.dev/muulin-universal/ml-iotsrv/queue:v2.0.0
    environment:
    - SERVICE=scada-queue
    - QUEUE_PATH=/etc/que/
    - CONFIG_FILE=/etc/config.yml
    - GIN_MODE=${GIN_MODE}
    - API_PORT=${API_PORT}
    - MOCK_AUTH=${MOCK_AUTH}
    - API_DEBUG=${IS_DEBUG}
    - TRUSTED_PROXIES=${TRUSTED_PROXIES}
    - GRPC_Auth_Address=${GRPC_AUTH_ADDRESS}
    - GRPC_COMMUNICATE_ADDRESS=${GRPC_COMMUNICATE_ADDRESS}
    - GRPC_LAYOUT_ADDRESS=${GRPC_LAYOUT_ADDRESS}
    volumes:
    - /gw/configs/conf/config.yml:/etc/config.yml
    - /gw/data/que/:/etc/que/
  report-svc:
    restart: always
    image: asia-east1-docker.pkg.dev/muulin-universal/ml-iotsrv/report:v2.0.0
    environment:
    - SERVICE=scada-report
    - USAGE=scada
    - CONFIG_FILE=/etc/config.yml
    - RESOURCE_PATH=/rsrc/
    - GIN_MODE=${GIN_MODE}
    - API_PORT=${API_PORT}
    - MOCK_AUTH=${MOCK_AUTH}
    - API_DEBUG=${IS_DEBUG}
    - TRUSTED_PROXIES=${TRUSTED_PROXIES}
    - GRPC_Auth_Address=${GRPC_AUTH_ADDRESS}
    - GRPC_LAYOUT_ADDRESS=${GRPC_LAYOUT_ADDRESS}
    - DIR=/etc/reports/
    - GRPC_PORT=${GRPC_PORT}
    - GRPC_REFLECT=${GRPC_REFLECT}
    volumes:
    - /gw/configs/conf/config.yml:/etc/config.yml
    - /gw/data/reports/:/etc/reports/
  event-svc:
    restart: always
    image: asia-east1-docker.pkg.dev/muulin-universal/ml-iotsrv/event:v2.0.0
    depends_on:
    - auth-svc
    environment:
    - SERVICE=event
    - LOG_LEVEL=${LOG_LEVEL}
    - LOG_TARGET=${LOG_TARGET}
    - CONFIG_FILE=/etc/config.yml
    - GIN_MODE=${GIN_MODE}
    - API_PORT=${API_PORT}
    - MOCK_AUTH=false
    - API_DEBUG=${IS_DEBUG}
    - TRUSTED_PROXIES=${TRUSTED_PROXIES}
    - GRPC_PORT=${GRPC_PORT}
    - GRPC_REFLECT=${GRPC_REFLECT}
    - WARN_CACHE_DURATION=-1s
    - GRPC_Auth_Address=${GRPC_AUTH_ADDRESS}
    volumes:
    - /gw/configs/conf/config.yml:/etc/config.yml
    - /gw/data/sql/:/sql/
  rubase-alert-svc:
    restart: always
    image: asia-east1-docker.pkg.dev/muulin-universal/ml-iotsrv/rubase:v2.0.0
    depends_on:
    - auth-svc
    - event-svc
    - report-svc
    - com2scada-svc
    environment:
    - USAGE=scada
    - LOG_LEVEL=${LOG_LEVEL}
    - LOG_TARGET=${LOG_TARGET}
    - SERVICE=rubase_alert
    - CONFIG_FILE=/etc/config.yml
    - CHECK_CYCLE=1m
    - ALERT_CONFIG_PATH=/etc/rubase/
    - GIN_MODE=${GIN_MODE}
    - API_PORT=${API_PORT}
    - MOCK_AUTH=false
    - API_DEBUG=${IS_DEBUG}
    - TRUSTED_PROXIES=${TRUSTED_PROXIES}
    - GRPC_PORT=${GRPC_PORT}
    - GRPC_REFLECT=${GRPC_REFLECT}
    - GRPC_Auth_Address=${GRPC_AUTH_ADDRESS}
    - GRPC_COM2SCADA_ADDRESS=${GRPC_COM2SCADA_ADDRESS}
    - GRPC_REPORT_ADDRESS=${GRPC_REPORT_ADDRESS}
    - GRPC_EVENT_ADDRESS=${GRPC_EVENT_ADDRESS}
    volumes:
    - /gw/configs/conf/config.yml:/etc/config.yml
    - /gw/data/rubase/:/etc/rubase/
  alarm-svc:
    restart: always
    image: asia-east1-docker.pkg.dev/muulin-universal/ml-iotsrv/alarm:v2.0.0
    depends_on:
    - auth-svc
    - event-svc
    - layout-svc
    environment:
    - USAGE=scada
    - LOG_LEVEL=${LOG_LEVEL}
    - LOG_TARGET=${LOG_TARGET}
    - SERVICE=alarm
    - CONFIG_FILE=/etc/config.yml
    - GRPC_COM2SCADA_ADDRESS=${GRPC_COM2SCADA_ADDRESS}
    - GRPC_LAYOUT_ADDRESS=${GRPC_LAYOUT_ADDRESS}
    - GRPC_EVENT_ADDRESS=${GRPC_EVENT_ADDRESS}
    volumes:
    - /gw/configs/conf/config.yml:/etc/config.yml
  ems-svc:
    restart: always
    image: asia-east1-docker.pkg.dev/muulin-universal/ml-iotsrv/elec-demand:v2.0.0
    environment:
    - USAGE=scada
    - LOG_LEVEL=${LOG_LEVEL}
    - LOG_TARGET=${LOG_TARGET}
    - SERVICE=electricity-demand
    - CONFIG_FILE=/etc/config.yml
    - EMS_CONFIG_PATH=/scada/ems
    - GRPC_Auth_Address=${GRPC_AUTH_ADDRESS}
    - GRPC_COMMUNICATE_ADDRESS=${GRPC_COMMUNICATE_ADDRESS}
    - GRPC_COM2SCADA_ADDRESS=${GRPC_COM2SCADA_ADDRESS}
    - GRPC_REPORT_ADDRESS=${GRPC_REPORT_ADDRESS}
    - GRPC_LAYOUT_ADDRESS=${GRPC_LAYOUT_ADDRESS}
    - GRPC_EVENT_ADDRESS=${GRPC_EVENT_ADDRESS}
    - INFLUXDB_INIT_FILE=/elec/influxdb_init.yml
    - INFLUXDB_BUCKET=electricity-demand
    - INFLUXDB_REPORT_BUCKET=electricity-demand-report
    - INFLUXDB_MEASUREMENT=use-electricity
    - API_PORT=${API_PORT}
    - API_DEBUG=${API_DEBUG}
    - MOCK_AUTH=false
    - GIN_MODE=${GIN_MODE}
    - TRUSTED_PROXIES=${TRUSTED_PROXIES}
    volumes:
    - /gw/configs/conf/config.yml:/etc/config.yml
    - /gw/configs/conf/elec/influxdb_init.yml:/elec/influxdb_init.yml
    - /gw/data/ems:/scada/ems
  web-svc:
    restart: always
    image: asia-east1-docker.pkg.dev/muulin-universal/ml-iotsrv/web:v2.0.0
    pull_policy: missing
    environment:
    - VITE_SSE_URL=${HOST_URL}
    - VITE_API_HOST=${HOST_URL}/web
    - VITE_LAYOUT_URL=${HOST_URL}/web/layout/tv
# Gateway Components
  com2mc:
    networks:
      default:
        mac_address: ${MAC_ADDRESS}
    restart: always
    depends_on:
      - emqx
    image: asia-east1-docker.pkg.dev/muulin-universal/ml-iotgw/com2mc:v2.0.0
    pull_policy: missing
    environment:
      - GRPC_PORT=${GRPC_PORT}
      - SERVICE=com2mc
      - CONFIG_FILE=/scada/conf/config.yml
      - MLM_CONF_PATH=/scada/conf/mlm/
      - GRPC_COMMUNICATE_ADDRESS=${GRPC_COMMUNICATE_ADDRESS}
      - GRPC_REFLECT=${GRPC_REFLECT}
      - MQTT_BrokerURL=tcp://emqx:1883
      - ROUTINE_TOPIC=${TOPIC_ROUTINE_DATA}
      - WRITE_EVENT_TOPIC=${TOPIC_WRITE_DATA}
      - MQTT_Topic=com/routine/data&com/event/write-data
      - MQTT_ClientID=com2mc
      - MQTT_Qos=1
      - MQTT_KeepAlive=30
      - MQTT_ConnectRetryDelay=500
      - MQTT_Group=scada
      - MQTT_Debug=true
      - MQTT_IsAuth=false
      - MQTT_User=emq
      - MQTT_Password=emqpassword
      - MQTT_QueuePath=${MQTT_QueuePath}
      - MQTT_Gzip=false
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_TARGET=${LOG_TARGET}
    volumes:
      - /gw/configs/backend/mlm:/scada/conf/mlm
      - /gw/configs/conf/config.yml:/scada/conf/config.yml
      - /gw/data/com2mc:/scada/data
  tvgw-svc:
    restart: always
    image: asia-east1-docker.pkg.dev/muulin-universal/ml-iotgw/tvgw:main
    pull_policy: missing
    links:
    - layout-tv-svc:scada-layout-svc
    - tvsse-svc:tv-sse-svc
  communicate:
    restart: always
    privileged: true
    depends_on:
      - emqx
      - redis
    image: asia-east1-docker.pkg.dev/muulin-universal/ml-iotgw/communicate:v2.0.0
    pull_policy: missing
    ports:
    - 7080:7080
    environment:
      - environment=${environment}
      - S6_KEEP_ENV=1
      - GRPC_PORT=7080
      - SERVICE=communicate
      - MQTT_ClientID=communicate
      - MQTT_Group=scada
      - MQTT_QueuePath=${MQTT_QueuePath}
      - CONFIG_FILE=/scada/conf/config.yml
      - COM_CONF_PATH=/scada/conf/com/
      - READ_DURATION=200ms
      - WRITE_DURATION=500ms
      - PUBLISH_DURATION=30s
      - DATA_EXPIRE=5m
      - EVENT_CHANGE_DATA_TOPIC=${TOPIC_CHANGE_DATA}
      - EVENT_WRITE_DATA_TOPIC=${TOPIC_WRITE_DATA}
      - EVENT_CONN_ERR_TOPIC=${TOPIC_CONNECT_ERR}
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_TARGET=os
      - MQTT_BrokerURL=${MQTT_BrokerURL}
      - MQTT_Qos=${MQTT_Qos}
      - MQTT_KeepAlive=${MQTT_KeepAlive}
      - MQTT_ConnectRetryDelay=${MQTT_ConnectRetryDelay}
      - MQTT_Debug=${MQTT_Debug}
      - MQTT_IsAuth=${MQTT_IsAuth}
      - MQTT_User=${MQTT_User}
      - MQTT_Password=${MQTT_Password}
      - MQTT_Gzip=${MQTT_Gzip}
      - GRPC_REFLECT=${GRPC_REFLECT}
    volumes:
      - /gw/configs/backend/DataSource:/scada/conf/com
      - /gw/configs/conf/config.yml:/scada/conf/config.yml
      - /gw/data/communicate:/scada/data/queue
      - /gw/log/communicate:/scada/data/log
  timing:
    restart: always
    image: asia-east1-docker.pkg.dev/muulin-universal/ml-iotgw/timing:v2.0.0
    pull_policy: missing
    depends_on:
    - communicate
    environment:
    - S6_KEEP_ENV=1
    - SERVICE=timing
    - CONFIG_FILE=/etc/config.yml
    - GRPC_COMMUNICATE_ADDRESS=${GRPC_COMMUNICATE_ADDRESS}
    - TIMING_SETTING_FILE=/etc/timing.yml
    - TIMING_DURATION=1h
    - LOG_LEVEL=${LOG_LEVEL}
    - GRPC_PORT=${GRPC_PORT}
    - GRPC_REFLECT=${GRPC_REFLECT}
    volumes:
    - /gw/configs/backend/Cron/config.yml:/etc/timing.yml
    - /gw/configs/conf/config.yml:/etc/config.yml
  avg2display:
    restart: always
    image: asia-east1-docker.pkg.dev/muulin-universal/ml-iotgw/avg2display:v2.0.0
    pull_policy: missing
    depends_on:
    - communicate
    environment:
    - SERVICE=avg2display
    - CONFIG_FILE=/etc/config.yml
    - GRPC_COMMUNICATE_ADDRESS=${GRPC_COMMUNICATE_ADDRESS}
    - AVG_SETTING_FILE=/etc/avg_setting.yml
    - CACHE_DB=avg2display
    - AVG_DURATION=5s
    - LOG_LEVEL=debug
    - GRPC_PORT=${GRPC_PORT}
    - GRPC_REFLECT=${GRPC_REFLECT}
    volumes:
    - /gw/configs/backend/Cron/config.yml:/etc/avg_setting.yml
    - /gw/configs/conf/config.yml:/etc/config.yml
  layout-tv-svc:
    restart: always
    image: asia-east1-docker.pkg.dev/muulin-universal/ml-iotgw/layout:v2.0.0
    pull_policy: missing
    environment:
    - SERVICE=scada_layout
    - CONFIG_FILE=/conf/config.yml
    - DOWNLOAD_CONF_DIR=/frontend/
    - GRPC_AUTH_ADDRESS=127.0.0.1:7092
    - GRPC_COMMUNICATE_ADDRESS=${GRPC_COMMUNICATE_ADDRESS}
    - GRPC_PORT=${GRPC_PORT}
    - GRPC_REFLECT=${GRPC_REFLECT}
    - LOG_LEVEL=${LOG_LEVEL}
    - LOG_TARGET=${LOG_TARGET}
    - TV_MODE_ONLY=true
    - COMM_TIME_OUT_DURATION=2.5s
    - STATIC_IMAGE_PATH=/image
    - GIN_MODE=${GIN_MODE}
    - MOCK_AUTH=${MOCK_AUTH}
    - API_DEBUG=${API_DEBUG}
    - API_PORT=${API_PORT}
    - TRUSTED_PROXIES=*
    volumes:
    - /gw/configs/frontend:/frontend
    - /gw/configs/conf/config.yml:/conf/config.yml
  tvsse-svc:
    restart: always
    image: asia-east1-docker.pkg.dev/muulin-universal/ml-iotgw/tvsse:v2.0.0
    pull_policy: missing
    environment:
    - SERVICE=scada-tv-sse
    - CONFIG_FILE=/etc/config.yml
    - GRPC_PORT=${GRPC_PORT}
    - GRPC_REFLECT=${GRPC_REFLECT}
    - TOPIC_CHANGE_DATA=${TOPIC_CHANGE_DATA}
    - TOPIC_WRITE_DATA=${TOPIC_WRITE_DATA}
    - GRPC_LAYOUT_ADDRESS=${GRPC_LAYOUT_ADDRESS}
    - MQTT_BrokerURL=${MQTT_BrokerURL}
    - MQTT_ClientID=scada_tv
    - MQTT_Qos=${MQTT_Qos}
    - MQTT_KeepAlive=${MQTT_KeepAlive}
    - MQTT_ConnectRetryDelay=${MQTT_ConnectRetryDelay}
    - MQTT_Debug=${MQTT_Debug}
    - MQTT_IsAuth=${MQTT_IsAuth}
    - MQTT_User=${MQTT_User}
    - MQTT_Password=${MQTT_Password}
    - MQTT_QueuePath=${MQTT_QueuePath}
    - MQTT_Gzip=${MQTT_Gzip}
    - GIN_MODE=${GIN_MODE}
    - API_PORT=${API_PORT}
    - MOCK_AUTH=${MOCK_AUTH}
    - API_DEBUG=${API_DEBUG}
    - TRUSTED_PROXIES=*
    volumes:
    - /gw/configs/conf/config.yml:/etc/config.yml
    - /gw/data/tvsse:/scada/data/queue
  tv-svc:
    restart: always
    image: asia-east1-docker.pkg.dev/muulin-universal/ml-iotgw/tv:v2.0.0
    pull_policy: missing
    environment:
      - VITE_SSE_URL=http://${TV_HOST_URL}
      - VITE_LAYOUT_URL=http://${TV_HOST_URL}/igw/tv
      - VITE_TV_TITLE=瓦城
      - VITE_TV_SUBTITLE=監控系統
      - VITE_TV_LOGO=TTFB_company_logo.svg
  monitor:
    image: asia-east1-docker.pkg.dev/muulin-universal/ml-iotgw/monitor:v2.0.2
    restart: always
    environment:
      - SERVICE=monitor
      - DEFAULT_DURATION_PERIODIC=1m
      - ALERT_CHECK_DURATION=30s
      - OFFSET_PROCESS_DURATION=20s
      - FIELD_PULSE_PROCESS_DURATION=10s
      - SQL_DB_PATH=/scada/data/monitor.db
      - PERIODIC_SEND_CONF_PATH=/scada/conf/periodicSend.yaml
      - ALERT_CONF_PATH=/scada/conf/alertReport.yaml
      - OFFSET_CONF_PATH=/scada/conf/offset.yaml
      - FIELD_PULSE_CONF_PATH=/scada/conf/fieldPulse.yaml
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_TARGET=${LOG_TARGET}
      - CONFIG_FILE=/etc/config.yml
      - GRPC_COMM_ADDRESS=${GRPC_COMMUNICATE_ADDRESS}
      - MQTT_Topic=${TOPIC_CHANGE_DATA}
      - MQTT_BrokerURL=${MQTT_BrokerURL}
      - MQTT_ClientID=alert-monitor
      - MQTT_Qos=${MQTT_Qos}
      - MQTT_KeepAlive=${MQTT_KeepAlive}
      - MQTT_ConnectRetryDelay=${MQTT_ConnectRetryDelay}
      - MQTT_Group=scada
      - MQTT_Debug=${MQTT_Debug}
      - MQTT_IsAuth=${MQTT_IsAuth}
      - MQTT_User=${MQTT_User}
      - MQTT_Password=${MQTT_Password}
    volumes:
      - /gw/configs/conf/config.yml:/etc/config.yml
      - /gw/configs/backend/Monitor:/scada/conf
      - /gw/data/monitor:/scada/data
  register:
    image: asia-east1-docker.pkg.dev/muulin-universal/ml-iotgw/register:v2.0.0
    restart: always
    ports:
      - 1502:1502
    environment:
      - SERVICE=register
      - SQL_DB_PATH=/scada/data/register.db
      - MB_TIMEOUT=5m
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_TARGET=${LOG_TARGET}
      - CONFIG_FILE=/etc/config.yml
      - MODBUS_PORT=1502
    volumes:
      - /gw/configs/conf/config.yml:/etc/config.yml
      - /gw/data/register:/scada/data
  config-watcher:
    restart: always
    image: asia-east1-docker.pkg.dev/muulin-universal/ml-iotgw/configwatcher:v2.0.0
    pull_policy: missing
    environment:
      - MQTT_BrokerURL=${MQTT_BrokerURL}
      - RESTART_TOPIC=com/config-sync/restart
  config-sync:
    restart: always
    image: asia-east1-docker.pkg.dev/muulin-universal/ml-iotgw/config-sync:v2.0.0
    pull_policy: missing
    environment:
      - environment=${environment}
      - CONFIGURATION_TOKEN=${CONFIGURATION_TOKEN}
      - VERSION_CONFIG_PATH=/scada/data/store
      - MAX_FILE_COUNT=10
      - GRPC_CONFIGURATION_ADDRESS=rpc.hvac-cloud.org:81
      - SERVICE=config-sync
      - CONFIG_FILE=/scada/conf/config.yml
      - LOG_LEVEL=debug
      - LOG_TARGET=os
      - MQTT_BrokerURL=${MQTT_BrokerURL}
      - MQTT_ClientID=config-sync
      - MQTT_Qos=2
      - MQTT_Topic=mock_topic
      - MQTT_KeepAlive=${MQTT_KeepAlive}
      - MQTT_ConnectRetryDelay=${MQTT_ConnectRetryDelay}
      - MQTT_Group=scada
      - MQTT_Debug=${MQTT_Debug}
      - MQTT_IsAuth=${MQTT_IsAuth}
      - MQTT_User=${MQTT_User}
      - MQTT_Password=${MQTT_Password}
      - MQTT_QueuePath=/scada/data/queue
      - MQTT_Gzip=${MQTT_Gzip}
      - FRONTEND_CONFIG_PATH=/scada/configs/frontend
      - BACKEND_CONFIG_PATH=/scada/configs/backend
      - RESTART_MQTT_TOPIC=com/config-sync/restart
    volumes:
      - /gw/configs/backend:/scada/configs/backend
      - /gw/configs/frontend:/scada/configs/frontend
      - /gw/configs/conf/config.yml:/scada/conf/config.yml
      - /gw/data/config-sync:/scada/data